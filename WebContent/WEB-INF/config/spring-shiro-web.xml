<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/util
	http://www.springframework.org/schema/util/spring-util.xsd">
	
	<!-- 缓存管理器，使用Ehcache实现 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"></property>
	</bean>
	
	<bean id="byteSource" class="org.apache.shiro.util.SimpleByteSource">
		<constructor-arg value="nnniu"></constructor-arg>
	</bean>
	
	<bean id="secureRandomNumberGenerator" class="org.apache.shiro.crypto.SecureRandomNumberGenerator">
	</bean>
	
	<bean id="hashService" class="org.apache.shiro.crypto.hash.DefaultHashService">
		<property name="hashAlgorithmName" value="MD5"></property>
		<property name="privateSalt" ref="byteSource"></property>
		<property name="generatePublicSalt" value="true"></property>
		<property name="randomNumberGenerator" ref="secureRandomNumberGenerator"></property>
		<property name="hashIterations" value="1"></property>
	</bean>
	
	<bean id="hexFormat" class="org.apache.shiro.crypto.hash.format.HexFormat">
	</bean>
	
	<!-- 加密密码 -->
	<bean id="passwordService" class="org.apache.shiro.authc.credential.DefaultPasswordService">
		<property name="hashService" ref="hashService"></property>
		<property name="hashFormat" ref="hexFormat"></property>
	</bean>
	
	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.nnniu.shiro.ch12.credentials.RetryLimitPasswordMatcher">
		<constructor-arg ref="cacheManager"/>
		<property name="passwordService" ref="passwordService"></property>
	</bean>
	
	<!-- Realm实现 -->
	<bean id="userRealm" class="com.nnniu.shiro.ch12.realm.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"></property>
		<property name="userService" ref="userService"></property>
		<property name="cachingEnabled" value="true"></property>
		<property name="authenticationCachingEnabled" value="true"></property>
		<property name="authenticationCacheName" value="authenticationCache"></property>
		<property name="authorizationCachingEnabled" value="true"></property>
		<property name="authorizationCacheName" value="authorizationCache"></property>
	</bean>
	
	<!-- 会话Cookie模板 -->
	<bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<property name="name" value="SID"></property>
		<property name="httpOnly" value="true"></property>
		<property name="maxAge" value="-1"></property>
	</bean>
	
	<!-- rememberMeCookie模板 -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe"></constructor-arg>
		<property name="httpOnly" value="true"></property>
		<!-- 30天 -->
		<property name="maxAge" value="2592000"></property>
	</bean>
	
	<!-- 会话ID生成器 -->
	<bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />
	
	<!-- 会话DAO -->
	<bean id="sessionDAO" class="com.nnniu.shiro.ch12.session.MyCachingSessionDAO">
		<property name="activeSessionsCacheName" value="shiro-activeSessionCache"></property>
		<property name="sessionIdGenerator" ref="sessionIdGenerator"></property>
	</bean>
	
	<!-- 会话验证调度器 -->
	<bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.ExecutorServiceSessionValidationScheduler">
		<property name="interval" value="180000"></property>
		<property name="sessionManager" ref="sessionManager"></property>
	</bean>
	
	<!-- 会话管理器 -->
	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- 全局的session超时时间，毫秒 -->
		<property name="globalSessionTimeout" value="180000"></property>
		<property name="deleteInvalidSessions" value="true"></property>
		<property name="sessionIdCookieEnabled" value="true"></property>
		<property name="sessionIdCookie" ref="sessionIdCookie"></property>
		<property name="sessionDAO" ref="sessionDAO"></property>
		<property name="sessionValidationSchedulerEnabled" value="true"></property>
		<property name="sessionValidationScheduler" ref="sessionValidationScheduler"></property>
	</bean>

	<!-- rememberMe管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}"></property>
		<property name="cookie" ref="rememberMeCookie"></property>
	</bean>
	
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="cacheManager"></property>
		<property name="realm" ref="userRealm"></property>
		<property name="sessionManager" ref="sessionManager"></property>
		<property name="rememberMeManager" ref="rememberMeManager"></property>
	</bean>
	
	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"></property>
		<property name="arguments" ref="securityManager"></property>
	</bean>
	
	<!-- 基于Form表单的身份验证过滤器 -->
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="usernameParam" value="username"></property>
		<property name="passwordParam" value="password"></property>
		<property name="rememberMeParam" value="rememberMe"></property>
		<property name="loginUrl" value="/login"></property>
	</bean>
	
	<!-- Shiro的Web过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"></property>
		<property name="loginUrl" value="/login"></property>
		<property name="unauthorizedUrl" value="/unauthorized"></property>
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="formAuthenticationFilter"></entry>
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/login=authc
				/unauthorized=anon
				/static/**=anon
				/authenticated=authc
				/role=authc,roles[admin]
				/permission=authc,perms[user:create]
				/profile=user
			</value>
		</property>
	</bean>
	
</beans>