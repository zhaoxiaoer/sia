[main]
#指定securityManager的认证器authenticator，且要在realms属性之前指定
authenticator=org.apache.shiro.authc.pam.ModularRealmAuthenticator
securityManager.authenticator=$authenticator
#指定认证器authenticator的认证策略authenticationStrategy
#firstSuccessfulStrategy=org.apache.shiro.authc.pam.FirstSuccessfulStrategy
atLeastOneSuccessfulStrategy=org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy
#allSuccessfulStrategy=org.apache.shiro.authc.pam.AllSuccessfulStrategy
securityManager.authenticator.authenticationStrategy=$atLeastOneSuccessfulStrategy

#指定授权器authorizer
authorizer=org.apache.shiro.authz.ModularRealmAuthorizer
#指定授权器authorizer的权限解析器permissionResolver和角色权限解析器rolePermissionResolver
permissionResolver=org.apache.shiro.authz.permission.WildcardPermissionResolver
authorizer.permissionResolver=$permissionResolver
#rolePermissionResolver=???
#authorizer.rolePermissionResolver=$rolePermissionResolver
securityManager.authorizer=$authorizer

#jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm
dataSource=com.mchange.v2.c3p0.ComboPooledDataSource
dataSource.driverClass=com.mysql.cj.jdbc.Driver
dataSource.jdbcUrl=jdbc:mysql://125.46.31.185:3306/shiro
dataSource.user=root
dataSource.password=
#jdbcRealm.dataSource=$dataSource

#增加另一个realm
firstRealm=com.nnniu.shiro.ch2.MyRealm1
secondRealm=com.nnniu.shiro.ch2.MyRealm2

#注意: FirstSuccessfulStrategy认证策略，返回的是最后一个身份，不是第一个
#securityManager.realms=$jdbcRealm,$firstRealm,$secondRealm
#securityManager.realms=$firstRealm,$secondRealm

[users]
zhao=123456,管理员,开发者

[roles]
管理员=users:create,users:delete
开发者=users:create
